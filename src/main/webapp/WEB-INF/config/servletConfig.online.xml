<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.mytest.app.*" />

	<bean id="activityDao" class="com.mytest.app.activities.dao.ActivityDAOImpl">
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	<bean id="userDao" class="com.mytest.app.users.dao.UserDAOImpl">
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	<bean id="groupDao" class="com.mytest.app.groups.dao.GroupDAOImpl">
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://mysql25662-freejoin.mycloud.by/fw_qa?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;transformedBitIsBoolean=true" />
		<property name="username" value="root" />
		<property name="password" value="ZNYiyp48111" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
	</bean>

	<tx:annotation-driven />
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessageConverter" />
				<ref bean="jsonConverter" />
			</list>
		</property>
	</bean>

	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
				<value>application/json</value>
			</list>
		</property>
	</bean>

	<bean id="jsonConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="prefixJson" value="false" />
		<property name="supportedMediaTypes" value="application/json" />
		<property name="objectMapper" ref="acmObjectMapper" />
	</bean>


	<!-- Own to solve jackson date -->
	<!-- <bean id="objectMapper" class="com.mytest.app.common.CompanyObjectMapper"
		/> <bean id="acmObjectMapper" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" ref="objectMapper" /> <property name="targetMethod"
		value="disable" /> <property name="arguments" value="WRITE_DATES_AS_TIMESTAMPS"
		/> </bean> -->

	<!-- set JSON date format to ISO-8601 e.g. 1970-01-01T00:00:00.000+0000 -->
	<bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper" />
	<bean id="acmObjectMapper"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" ref="objectMapper" />
		<property name="targetMethod" value="disable" />
		<property name="arguments" value="WRITE_DATES_AS_TIMESTAMPS" />
	</bean>

	<mvc:annotation-driven>
		<mvc:message-converters>
			<!-- We configure the Jackson mapper to output dates in ISO801 format.
				This requires adding our customized Jackson mapper to the list of Spring
				MVC message converters. But, if we just add our bean here all by itself,
				it will handle requests it should not handle, e.g. encoding strings. So we
				need to add the other standard message converters here too, and make sure
				to put the customized Jackson converter AFTER the string converter. -->

			<bean
				class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />
			<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.ResourceHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
			<ref bean="jsonConverter" />
			<bean
				class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.BufferedImageHttpMessageConverter" />
			<bean class="org.springframework.http.converter.FormHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.xml.Jaxb2CollectionHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>
</beans>
